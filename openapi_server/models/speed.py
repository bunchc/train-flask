# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Speed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, speed=None, direction=None):  # noqa: E501
        """Speed - a model defined in OpenAPI

        :param speed: The speed of this Speed.  # noqa: E501
        :type speed: int
        :param direction: The direction of this Speed.  # noqa: E501
        :type direction: str
        """
        self.openapi_types = {
            'speed': int,
            'direction': str
        }

        self.attribute_map = {
            'speed': 'speed',
            'direction': 'direction'
        }

        self._speed = speed
        self._direction = direction

    @classmethod
    def from_dict(cls, dikt) -> 'Speed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Speed of this Speed.  # noqa: E501
        :rtype: Speed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def speed(self):
        """Gets the speed of this Speed.


        :return: The speed of this Speed.
        :rtype: int
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this Speed.


        :param speed: The speed of this Speed.
        :type speed: int
        """

        self._speed = speed

    @property
    def direction(self):
        """Gets the direction of this Speed.


        :return: The direction of this Speed.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this Speed.


        :param direction: The direction of this Speed.
        :type direction: str
        """

        self._direction = direction
